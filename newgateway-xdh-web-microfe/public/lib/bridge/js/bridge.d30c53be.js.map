{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/storage.js","webpack:///./src/utils/messager.js","webpack:///./build/libs/bridge.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","bridge","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SESSION","sessionStorage","LOCAL","localStorage","save","storage","arguments","undefined","str","esm_typeof","JSON","stringify","setItem","MESSAGE_TYPE","Messager","options","_this","this","classCallCheck","objectSpread","target","ready","handlers","buildBridge","then","el","contentWindow","proxyBridgeHandler","bridgeHandler","addEventListener","type","handler","listener","evt","message","origin","_this2","forEach","h","index","removeEventListener","keys","off","postMessage","_this3","_arguments","on","_this4","Promise","resolve","reject","document","createElement","style","display","setAttribute","Date","getTime","onload","onerror","e","body","appendChild","__t__","parse","newValue","parentNode","removeChild","messager","parent","pass"],"mappings":"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","file":"js/bridge.d30c53be.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"bridge\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * 缓存操作模块，提供sessionStorage和localStorage操作\n * @module utils/storage\n * @author 陈华春\n */\n\n/**\n * sessionStorage\n * @const\n * @type {Storage}\n */\nexport const SESSION = sessionStorage\n\n/**\n * localStorage\n * @type {Storage}\n */\nexport const LOCAL = localStorage\n\n/**\n * 保存缓存\n * @param {string} key 缓存key\n * @param {String|Object|Array} value 缓存值，对象、数组类型自动JSON.stringify成字符串\n * @param {Storage} [storage=sessionStorage] 存储方式 SESSION 或 LOCAL\n */\nexport function save(key, value, storage = SESSION) {\n  const str = typeof value === 'object' ? JSON.stringify(value) : value\n  storage.setItem(key, str)\n}\n\n/**\n * 获取缓存\n * @param {string} key 缓存key\n * @param {Storage} [storage=sessionStorage] 存储方式 SESSION 或 LOCAL\n * @returns {String|Object|Array}\n */\nexport function get(key, storage = SESSION) {\n  let info = storage.getItem(key)\n  if (info) {\n    const regex = /^\\{[\\W\\w]*\\}$/\n    return regex.test(info) ? JSON.parse(info) : info\n  }\n  return null\n}\n\n/**\n * 删除缓存\n * @param {string} key 缓存key\n * @param {Storage} [storage=sessionStorage] 存储方式 SESSION 或 LOCAL\n */\nexport function remove(key, storage = SESSION) {\n  storage.removeItem(key)\n}\n\n/**\n * 删除全部缓存\n * @param {Storage} [storage=sessionStorage] 存储方式 SESSION 或 LOCAL\n */\nexport function clear(storage = SESSION) {\n  storage.clear()\n}\n","/**\n * 跨域页面消息通信\n * @module utils/messager\n * @author 陈华春\n */\n\nimport {save, LOCAL} from './storage'\n\nexport const MESSAGE_TYPE = 'XDH_WEB_MESSAGER'\n\n/**\n * 跨域页面消息通信类\n * @class\n */\nexport default class Messager {\n  /**\n   *\n   * @param {object} options 实例化参数选项\n   * @param {Window} [options.target] 通信目标，使用桥通讯时可以不传\n   * @param {string} [options.bridge] 桥页面url，如需要跨浏览器窗口传输数据，必须要设置\n   * @param {function} [options.ready] 桥页面加载完成时回调函数\n   */\n  constructor(options) {\n    const o = this.options = {\n      target: window,\n      bridge: null,\n      ready: null,\n      ...options\n    }\n    /**\n     * 通信目标对象\n     * @property {Window} target\n     * @type {Window | *}\n     */\n    this.target = o.target\n    this.handlers = {}\n    if (o.bridge) {\n      this.buildBridge().then((el) => {\n        this.target = el.contentWindow\n        this.el = el\n        o.ready && o.ready(this)\n      })\n      this.proxyBridgeHandler = this.bridgeHandler.bind(this)\n      window.addEventListener('storage', this.proxyBridgeHandler)\n    } else {\n      o.ready && o.ready(this)\n    }\n  }\n  \n  /**\n   * 侦听消息\n   * @param {string} type 消息类型\n   * @param {Function} handler 处理函数\n   */\n  on(type, handler) {\n    const listener = function (evt) {\n      // message: {type:'XDH_WEB_MESSAGER', data:{ type:'事件类型', data:{真正发送的数据}}}\n      let message = evt.data || {}\n      if (!message) return\n      if (message.type === MESSAGE_TYPE && message.data.type === type) {\n        handler(message.data.data, evt.origin)\n      }\n    }\n    \n    if (!this.handlers[type]) {\n      this.handlers[type] = []\n    }\n    this.handlers[type].push(listener)\n    window.addEventListener('message', listener)\n  }\n  \n  /**\n   * 取消侦听\n   * @param {string} [type] 消息类型\n   * @param {Function} [handler] 处理函数\n   */\n  off(type, handler) {\n    // 制定类型和事件句柄\n    if (type && handler) {\n      const handlers = this.handlers[type] || []\n      handlers.forEach((h, index) => {\n        if (handler === h) {\n          handlers.splice(index, 1)\n          window.removeEventListener('message', h)\n        }\n      })\n      // 制定事件类型\n    } else if (type) {\n      const handlers = this.handlers[type] || []\n      handlers.forEach(h => {\n        window.removeEventListener('message', h)\n      })\n      delete this.handlers[type]\n      // 全不制定，全部取消侦听\n    } else {\n      Object.keys(this.handlers).forEach(key => {\n        this.off(key)\n      })\n    }\n  }\n  \n  /**\n   * 发送消息\n   * @param {string} [type] 消息类型\n   * @param {Object} [data] 发送数据\n   */\n  fire(type, data) {\n    if (!this.target) return\n    \n    const message = {\n      type: MESSAGE_TYPE,\n      data: {\n        type,\n        data\n      }\n    }\n    // 桥转发时，数据包多一层\n    if (this.options.bridge) {\n      const bridge = {\n        type: MESSAGE_TYPE,\n        data: {\n          type: MESSAGE_TYPE,\n          data: {type, data}\n        }\n      }\n      this.target.postMessage(bridge, '*')\n    } else {\n      this.target.postMessage(message, '*')\n    }\n  }\n  \n  /**\n   * 接收消息，只接收一次\n   * @param {string} [type] 消息类型\n   * @param {Function} [handler] 处理函数\n   */\n  once(type, handler) {\n    this.on(type, () => {\n      handler.apply(this, arguments)\n      this.off(type, handler)\n    })\n  }\n  \n  /**\n   * 搭桥，创建iframe，加载桥页面\n   * @return {Promise<any>}\n   */\n  buildBridge() {\n    return new Promise((resolve, reject) => {\n      const el = document.createElement('iframe');\n      el.style.display = 'none'\n      el.setAttribute('src', this.options.bridge + '?t=' + new Date().getTime())\n      el.onload = () => {\n        resolve(el)\n      }\n      el.onerror = (e) => {\n        reject(e)\n      }\n      document.body.appendChild(el)\n    })\n    \n  }\n  \n  /**\n   * 桥页面传输写入localStorage\n   * @param {object} message\n   */\n  pass(message) {\n    save(MESSAGE_TYPE, {\n      message: message,\n      __t__: (new Date()).getTime()\n    }, LOCAL)\n  }\n  \n  /**\n   * localStorage 事件处理函数\n   * @param {object} evt\n   */\n  bridgeHandler(evt) {\n    if (evt.key !== MESSAGE_TYPE) return\n    const value = JSON.parse(evt.newValue)\n    if (value && value.message) {\n      const message = value.message\n      const handlers = this.handlers[message.type] || []\n      handlers.forEach(handler => {\n        handler({\n          data: {\n            type: MESSAGE_TYPE,\n            data: message\n          }\n        })\n      })\n    }\n  }\n  \n  /**\n   * 销毁\n   */\n  destroy() {\n    this.off()\n    if (this.proxyBridgeHandler) {\n      window.removeEventListener('storage', this.proxyBridgeHandler)\n    }\n    if (this.el) {\n      this.el.parentNode.removeChild(this.el)\n    }\n  }\n}\n\n\n\n","import Messager, {MESSAGE_TYPE} from '@/utils/messager'\n\nconst messager = new Messager({\n  target: parent.window\n})\n\nmessager.on(MESSAGE_TYPE, function (data) {\n  messager.pass(data)\n})\n\n"],"sourceRoot":""}